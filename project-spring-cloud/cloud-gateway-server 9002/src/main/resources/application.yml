server:
  port: 9002

eureka:
  client:
    serviceUrl: # eureka server的路径
      defaultZone: http://cloudeurekaservera:8761/eureka/,http://cloudeurekaserverb:8762/eureka/ #把 eureka 集群中的所有 url 都填写了进来，也可以只写一台，因为各个 eureka server 可以同步注册表
  instance:
    #使用ip注册，否则会使用主机名注册了（此处考虑到对老版本的兼容，新版本经过实验都是ip）
    prefer-ip-address: true
    #自定义实例显示格式，加上版本号，便于多版本管理，注意是ip-address，早期版本是ipAddress
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}:@project.version@

spring:
  application:
    name: cloud-gateway-server
  cloud:
    gateway:
      routes: # 路由可以有多个
        - id: service-autoDeliver-router #自定义的路由id，保持唯一
            # 静态路由，目标服务地址，自动投递微服务（但可能会部署多个实例）
          uri: http://127.0.0.1:8092
          # 断言，路由条件，Predicate 接受一个输入参数，返回一个布尔值结果。该接口包含多种默认方法来将
          # Predicate组合成其他复杂的逻辑（比如：与，或，非）。
          predicates:
            - Path=/autodeliver/**
          filters:
            - StripPrefix=1

        - id: service-resume-router
          # 动态路由，目标是服务名称，网关会自动负载到某一个服务实例
          uri: lb://cloud-service-resume
          predicates:
            - Path=/test/resume/**
          filters:
            - StripPrefix=1


  zipkin:
    base-url: http://127.0.0.1:9441 # zipkin server的请求地址
    sender:
      # web: 客户端将踪迹⽇志数据通过⽹络请求的⽅式传送到服务端，另外还有配置
      # kafka/rabbit: 客户端将踪迹⽇志数据传递到mq进⾏中转
      type: web
  sleuth:
    sampler:
      # 采样率 1 代表100%全部采集 ，默认0.1 代表10% 的请求踪迹数据会被采集
      # ⽣产环境下，请求量⾮常⼤，没有必要所有请求的踪迹数据都采集分析，对
      #于⽹络包括server端压⼒都是⽐较⼤的，可以配置采样率采集⼀定⽐例的请求的踪迹数据进⾏分析即可
      probability: 1


logging:
  level:
    org.springframework.web.servlet.DispatcherServlet: debug
    org.springframework.cloud.sleuth: debug

